create table members(
id varchar2(20) primary key,
pwd varchar2(100),
name varchar2(20),
addr varchar2(100)
);
insert into members values('aaa','aaa','홍길동','산골짜기');
insert into members values('bbb','bbb','김개똥','개똥별');
insert into members values('ccc','ccc','고길똥','마포구');
commit;


quiz dbconnect (0)~(6)




000--- 압축파일 설명입니다----

1. 기본 파일 및 폴더 생성
2. package.json에 있는 모듈 설치
3. app.js 코드 확인
4. 기본 router.js 연동 
5. 실행 후 확인 ( localhost:3000 연동 확인)

111--- 압축파일 설명입니다 ----
1. router 기본 경로 send 대신 render변경(router.js 4번째줄)
2. index.ejs 코드 설정 및 header.ejs 설정
---- 기본 index.ejs 연동되는지 확인 후 router.js 2,3번째 코드 추가 ---
3. router.js 2,3 member_router.js 연동 코드 추가
4. member_router.js 코드 추가
5. member_controller 코드 추가
6. login.ejs 코드 추가
--- 서버 구동 후 확인 로그인 및 HOME 연동되는 지 확인

222--- 압축파일 설명입니다 ----
1. cookie_session_config 설정
2. db_config.js 설정 ( 본인 계정과 비밀번호로 변경하세요 )
3. app.js 세션 설정(7번째줄 코드 추가)
4. member_router 코드 추가
5. member_ctrl 코드 추가( 서비스 require 및 loginCheck 함수 추가)
6. member_service 코드 추가
7. member_dao 코드 추가
--- 위 코드까지는 로그인 성공 실패에 따라 세션을 만들지 말지 코드 ----
--- 아래 코드는 세션을 이용하여 login 또는 logout로 변경하는 코드 ---
8. router.js 코드 수정( res.render("index" , 세션값 추가함 ))
9. header.ejs if문을 이용해 세션 확인
10. member_router에 logout 경로 추가
11. member_ctrl logout 함수 추가
12. login.ejs 비밀번호 입력란 name=수정함. name=pwd

333--- 압축파일 설명입니다 ----
참고 : 이전 내용에서 로그인 or 로그아웃 처리시 세션을 / 기본경로로 전달해서 사용했는데, 
그럼 나중에 다른 페이지를 만들었을 경우 동일하게 세션값을 계속 넘겨줘야 한다.
불편함이 있어 이를 쿠키로 만들어서 사용자 단에서 쿠키값을 활용하는 방법으로 변경하였다
그럼 매번 변수를 넘겨줄 필요가 없어진다( router.get("경로", 세션..... 불편함))

1. app.js 11번째 줄 쿠키 설정
2. router.js 8번째 줄 if문 추가 쿠키 전달
3. header.js 코드 추가 <script> 쿠키 확인 코드</script> <nav></nav> 추가.. 아래 있는 기존 a 태그들은 삭제해도 된다
4. 로그아웃은 세션이 아니라 쿠키로 만들었기 때문에 로그아웃시 쿠키도 삭제해 주어야 한다. 
member_ctrl logout 함수에 res.clearCookie 코드 추가(14번째)

444--- 압축파일 설명입니다 ----
1. header.ejs <script> 에 회원정보 경로 추가(6, 9번째 줄)
2. member_router.js list 경로 추가
3. member_ctrl memberList 함수 추가
4. member_service memberList 함수 추가
5. member_dao memberList 함수 추가
6. list.ejs 코드 추가
7. 회원 정보 클릭시 로그인 되어 있지 않으면 로그인 페이지로 연동되며, 로그인 되어 있으면 list 페이지로 연동.
에러가 발생한다. 이유는 list에는 세션값을 전달하지 않아 header의 if(username), username이라는 값이 없어서 발생한다.
이를 해결하기 위해 세션값을 list.ejs로 전달해서 사용해도 되며 또는 세션 사용하는 코드를 삭제하고 쿠키로 사용하면 된다.
세션 사용 코드 삭제 : header.ejs 17번째 줄 아래의 내용은 삭제
8. header.ejs 17번째 줄 아래내용 삭제

555--- 회원 가입 ----
1. member_router 코드 추가 (router.get(register_view....))
2. member_ctrl registerView 함수추가
3. register_view.ejs 코드 추가
4. member_router register 경로 추가
5. member_ctrl register  함수추가
6. member_service register  함수추가
7. member_dao register  함수추가


666--- url 경로 처리 및 개인정보 확인 ----
1. member_service의 module.exports 에 getMemssage 함수 추가
2. member_ctrl memberList 함수 코드 추가(18번째 줄 부터)
3. list.ejs a 태그 추가(10번째 줄)
4. member_router member_info 경로 추가
5. member_ctrl getMember 함수 추가
6. member_service getMember 함수 추가(dao에 getMember함수는 그대로 다시 사용. 따로 추가 안함)
7. info.ejs 코드 추가
----- 위까지 확인하면 개인 정보 확인 가능 ----
---- 삭제 ----
1. member_router delete 경로 추가
2. member_ctrl memberDelete 함수 추가
3. member_service memberDelete 함수 추가
4. member_dao memberDelete 함수 추가

--- 삭제까지 확인 가능 ---

-- 수정
1. member_router modify 경로 추가
2. member_ctrl memberModifyView 함수 추가
3. modify_form.ejs 코드 추가
4. member_router modify 경로 추가
5. member_ctrl 함수 추가
6. member_service 함수 추가
7. member_dao 함수 추가

---- 수정 확인 가능

--- 로그인 사용자와 작성자가 같은지 확인
1. member_ctrl memberModifyView 코드 추가( 세션 값과(로그인 사용자) 글쓴 작성자가 같은지를 비교)



--- 개인정보 페이지 삭제 수정 숨기기
세션을 이용하여 세션값과 글쓴 id가 같은지 다른지 확인
1. member_ctrl getMember 함수 render에 세션 전달(41번째 추가)
2. info.ejs if코드 추가( 8번째, 11번째 코드 추가)